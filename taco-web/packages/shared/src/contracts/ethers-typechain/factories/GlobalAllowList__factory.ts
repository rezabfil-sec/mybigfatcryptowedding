/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import type { Provider } from '@ethersproject/providers';
import { Contract, Signer, utils } from 'ethers';
import type {
  GlobalAllowList,
  GlobalAllowListInterface,
} from '../GlobalAllowList';

const _abi = [
  {
    type: 'constructor',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: '_coordinator',
        type: 'address',
        internalType: 'contract Coordinator',
      },
      {
        name: '_admin',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'event',
    name: 'DefaultAdminDelayChangeCanceled',
    inputs: [],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminDelayChangeScheduled',
    inputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
      {
        name: 'effectSchedule',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminTransferCanceled',
    inputs: [],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'DefaultAdminTransferScheduled',
    inputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'acceptSchedule',
        type: 'uint48',
        internalType: 'uint48',
        indexed: false,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleAdminChanged',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'previousAdminRole',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'newAdminRole',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleGranted',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'event',
    name: 'RoleRevoked',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
        indexed: true,
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
      {
        name: 'sender',
        type: 'address',
        internalType: 'address',
        indexed: true,
      },
    ],
    anonymous: false,
  },
  {
    type: 'function',
    name: 'DEFAULT_ADMIN_ROLE',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'acceptDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'authorize',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'ritualId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'addresses',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'beginDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'cancelDefaultAdminTransfer',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'changeDefaultAdminDelay',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'coordinator',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'contract Coordinator',
      },
    ],
  },
  {
    type: 'function',
    name: 'deauthorize',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'ritualId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'addresses',
        type: 'address[]',
        internalType: 'address[]',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'defaultAdmin',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'function',
    name: 'defaultAdminDelay',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'defaultAdminDelayIncreaseWait',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'getRoleAdmin',
    stateMutability: 'view',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bytes32',
        internalType: 'bytes32',
      },
    ],
  },
  {
    type: 'function',
    name: 'grantRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'hasRole',
    stateMutability: 'view',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'isAddressAuthorized',
    stateMutability: 'view',
    inputs: [
      {
        name: 'ritualId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'encryptor',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'isAuthorized',
    stateMutability: 'view',
    inputs: [
      {
        name: 'ritualId',
        type: 'uint32',
        internalType: 'uint32',
      },
      {
        name: 'evidence',
        type: 'bytes',
        internalType: 'bytes',
      },
      {
        name: 'ciphertextHeader',
        type: 'bytes',
        internalType: 'bytes',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
  {
    type: 'function',
    name: 'owner',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: '',
        type: 'address',
        internalType: 'address',
      },
    ],
  },
  {
    type: 'function',
    name: 'pendingDefaultAdmin',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: 'newAdmin',
        type: 'address',
        internalType: 'address',
      },
      {
        name: 'schedule',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'pendingDefaultAdminDelay',
    stateMutability: 'view',
    inputs: [],
    outputs: [
      {
        name: 'newDelay',
        type: 'uint48',
        internalType: 'uint48',
      },
      {
        name: 'schedule',
        type: 'uint48',
        internalType: 'uint48',
      },
    ],
  },
  {
    type: 'function',
    name: 'renounceRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'revokeRole',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: 'role',
        type: 'bytes32',
        internalType: 'bytes32',
      },
      {
        name: 'account',
        type: 'address',
        internalType: 'address',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'rollbackDefaultAdminDelay',
    stateMutability: 'nonpayable',
    inputs: [],
    outputs: [],
  },
  {
    type: 'function',
    name: 'setCoordinator',
    stateMutability: 'nonpayable',
    inputs: [
      {
        name: '_coordinator',
        type: 'address',
        internalType: 'contract Coordinator',
      },
    ],
    outputs: [],
  },
  {
    type: 'function',
    name: 'supportsInterface',
    stateMutability: 'view',
    inputs: [
      {
        name: 'interfaceId',
        type: 'bytes4',
        internalType: 'bytes4',
      },
    ],
    outputs: [
      {
        name: '',
        type: 'bool',
        internalType: 'bool',
      },
    ],
  },
] as const;

export class GlobalAllowList__factory {
  static readonly abi = _abi;
  static createInterface(): GlobalAllowListInterface {
    return new utils.Interface(_abi) as GlobalAllowListInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider,
  ): GlobalAllowList {
    return new Contract(address, _abi, signerOrProvider) as GlobalAllowList;
  }
}
